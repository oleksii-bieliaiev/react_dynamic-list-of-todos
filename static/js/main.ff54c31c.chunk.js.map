{"version":3,"sources":["types/Condition.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Condition","TodoList","todos","setSelectedTodo","selectedTodo","className","map","todo","todoSelect","id","classNames","completed","title","type","onClick","TodoFilter","query","setQuery","setFilterType","onChange","event","target","value","all","active","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","chosenTodo","find","getApiUser","a","userId","data","useEffect","href","email","name","App","setTodos","filterType","getApiTodos","filteredTodos","filter","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff54c31c.chunk.js","sourcesContent":["export enum Condition {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  setSelectedTodo: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const todoSelect = todo.id === selectedTodo?.id;\n\n          return (\n            <tr\n              key={todo.id}\n              data-cy=\"todo\"\n              className={classNames(\n                { 'has-background-info-light': todoSelect },\n              )}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames({\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSelectedTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames('far', {\n                      'fa-eye': !todoSelect,\n                      'fa-eye-slash': todoSelect,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Condition } from '../../types/Condition';\n\ntype Props = {\n  query: string;\n  setQuery: (value: string) => void;\n  setFilterType: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  setFilterType,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => setFilterType(event.target.value)}\n        >\n          <option value={Condition.all}>All</option>\n          <option value={Condition.active}>Active</option>\n          <option value={Condition.completed}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todos: Todo[];\n  setSelectedTodo: () => void;\n  selectedTodo: Todo;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const chosenTodo = todos.find(todo => todo.id === selectedTodo.id);\n\n  const getApiUser = async () => {\n    if (chosenTodo) {\n      const data = await getUser(chosenTodo.userId);\n\n      setUser(data);\n    }\n  };\n\n  useEffect(() => {\n    getApiUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${chosenTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={setSelectedTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {chosenTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {chosenTodo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Condition } from './types/Condition';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [filterType, setFilterType] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const getApiTodos = async () => {\n    const data = await getTodos();\n\n    setTodos(data);\n  };\n\n  useEffect(() => {\n    getApiTodos();\n  });\n\n  const normalizeTodosWithQuery = todos.filter(({ title }) => {\n    return title.toLowerCase().includes(query.toLowerCase());\n  });\n\n  const filteredTodos = normalizeTodosWithQuery.filter(todo => {\n    switch (filterType) {\n      case Condition.active:\n        return todo.completed === false;\n      case Condition.completed:\n        return todo.completed === true;\n      default:\n        return Condition.all;\n    }\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                setFilterType={setFilterType}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length && <Loader />}\n              <TodoList\n                todos={filteredTodos}\n                setSelectedTodo={setSelectedTodo}\n                selectedTodo={selectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo\n        && (\n          <TodoModal\n            todos={filteredTodos}\n            setSelectedTodo={() => setSelectedTodo(null)}\n            selectedTodo={selectedTodo}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}